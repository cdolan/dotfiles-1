#!/bin/bash

# Generates minimal polybar config

PROGNAME=$(basename "$0")

exit_on_fail() {
	"$@" 2> /dev/null
	local code=$?
	if [[ ${code} -ne 0 ]]; then
		# Use notify-send
		echo -e "\nERROR: Command [$*] failed with error code ${code}\nFILE: ${PROGNAME}\nLINE: $LINENO\n" 1>&2
	fi
}

DEST_DIR="${HOME}/.config/polybar"
DEST_FILE="config"

if [ ! -d "${DEST_DIR}" ]; then
	exit_on_fail mkdir -p "${DEST_DIR}"
fi

get_xres() {
	exit_on_fail xrdb -query | grep "$1" | awk '{print $2}'
}

get_xfont() {
	exit_on_fail xrdb -query | grep "font" | cut -d: -f3
}

WM_PADDING_X=356
SCREEN_WIDTH="$(xrandr --listmonitors | grep \+ | awk '{print $3}' | cut -d/ -f1)"
POLYBAR_WIDTH="$(($SCREEN_WIDTH - $WM_PADDING_X * 2))"
ACTIVE_MONITOR="$(xrandr --listmonitors | grep \+ | awk '{print $NF}')"
INTERNAL_MONITOR="$(xrandr | grep "primary" | awk '{print $1}')"

OUTPUT="$(cat << CONF
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;

[global/wm]
	margin-top = 0
	margin-bottom = 0

[settings]
	throttle-output = 5
	throttle-output-for = 10
	throttle-input-for = 30

[bar/slim]
	monitor = ${ACTIVE_MONITOR}
	monitor-fallback = ${INTERNAL_MONITOR}
	fixed-center = true
	override-redirect = true
	wm-restack = i3

	dpi-x = 0
	dpi-y = 0

	offset-y = 14

	height = 28

	background = $(get_xres background:)
	foreground = $(get_xres foreground:)

	border-size = 0
	border-color = $(get_xres color4:)

	line-size = 1
	line-color = $(get_xres color4:)

	padding-left = 0
	padding-right = 0

	module-margin-left = 1
	module-margin-right = 1

	font-0 = "$(get_xfont):size=12:weight=bold;2"

[bar/slim-top]
	inherit = bar/slim
	bottom = false

	offset-x = ${WM_PADDING_X}
	width = ${POLYBAR_WIDTH}

	modules-left = i3
	modules-right = title

[module/i3]
	type = internal/i3
	format = <label-state>
	index-sort = true
	wrapping-scroll = false
	enable-click = true
	pin-workspaces = true
	strip-wsnumbers = false

	label-focused = %name%
	label-focused-foreground = $(get_xres foreground:)
	label-focused-background = $(get_xres background:)
	label-focused-underline = $(get_xres color4:)
	label-focused-padding = 2

	label-unfocused = %name%
	label-unfocused-foreground = $(get_xres foreground:)
	label-unfocused-background = $(get_xres background:)
	label-unfocused-padding = 2

	label-urgent = %name%
	label-urgent-foreground = $(get_xres color1:)
	label-urgent-background = $(get_xres background:)
	label-urgent-padding = 2

[module/title]
	type = internal/xwindow

	format = <label>

	label = %title%
	label-maxlen = 100
	label-foreground = $(get_xres foreground:)
	label-background = $(get_xres background:)
	label-underline = $(get_xres color4:)
	label-padding = 2

	label-empty = Empty
	label-empty-foreground = $(get_xres foreground:)
	label-empty-background = $(get_xres background:)
	label-empty-underline = $(get_xres color4:)
	label-empty-padding = 2
CONF
)"

printf '%s' "$OUTPUT" > "${DEST_DIR}/${DEST_FILE}"

notify-send "Generated ${DEST_FILE} in ${DEST_DIR}"
